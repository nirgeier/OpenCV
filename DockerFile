FROM consol/ubuntu-xfce-vnc

# The openCv version to install
ENV OPENCV_VERSION="4.1.0"

# Switch to root user to install additional software
USER 0

SHELL ["/bin/bash", "-c"]
# RUN echo $SHELL
RUN apt-get update -y
RUN apt-get upgrade -y
RUN apt-get autoremove -y

## Python3 packages
RUN apt-get install -y build-essential 
RUN apt-get install -y checkinstall
RUN apt-get install -y libreadline-gplv2-dev 
RUN apt-get install -y libncursesw5-dev 
RUN apt-get install -y libssl-dev 
RUN apt-get install -y libsqlite3-dev 
RUN apt-get install -y tk-dev 
RUN apt-get install -y libgdbm-dev 
RUN apt-get install -y libc6-dev 
RUN apt-get install -y libbz2-dev 
RUN apt-get install -y libffi-dev 
RUN apt-get install -y zlib1g-dev

## OpenCV packages
RUN apt-get install -y cmake 
RUN apt-get install -y git 
RUN apt-get install -y wget 
RUN apt-get install -y unzip 
RUN apt-get install -y yasm 
RUN apt-get install -y pkg-config 
RUN apt-get install -y libswscale-dev 
RUN apt-get install -y libtbb2 
RUN apt-get install -y libtbb-dev 
RUN apt-get install -y libjpeg-dev 
RUN apt-get install -y libpng-dev 
RUN apt-get install -y libtiff-dev 
RUN apt-get install -y libavformat-dev 
RUN apt-get install -y libpq-dev 
RUN apt-get install -y python3-dev 
RUN apt-get install -y python3-pip 

# Installing dlib
RUN apt-get install -y libopenblas-dev 
RUN apt-get install -y liblapack-dev 
RUN apt-get install -y libx11-dev 
RUN apt-get install -y libgtk-3-dev

## Install Python3
#COPY ./Python-3.7.3.tgz /usr/src/Python-3.7.3.tgz
# WORKDIR /usr/src
# RUN wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz
# RUN tar -xf Python-3.7.3.tar.xz
# WORKDIR /usr/src/Python-3.7.3
# RUN ./configure --enable-optimizations
# RUN make install

## OpenCV packages
# RUN rm -rf /var/lib/apt/lists/*
# RUN pip3 install --upgrade pip
# RUN pip3 install virtualenvwrapper
# RUN echo $(which virtualenvwrapper)
# RUN pip3 install numpy
# RUN pip3 install scipy 
# RUN pip3 install imutils

# RUN apt-get install -y python 
# RUN apt-get install -y python-dev 
# RUN apt-get install -y python3 

# Create a new Python virtual environment 
# RUN mkvirtualenv dlib_test -p python3

# Switch to the desired workspace
# RUN workon cv

# WORKDIR /
# COPY opencv-${OPENCV_VERSION}.zip /
# RUN unzip opencv-${OPENCV_VERSION}.zip 
# RUN mkdir opencv-${OPENCV_VERSION}/cmake_binary 
# WORKDIR /opencv-${OPENCV_VERSION}/cmake_binary 
# RUN cmake -DBUILD_TIFF=ON \
#   -DBUILD_opencv_java=OFF \
#   -DWITH_CUDA=OFF \
#   -DWITH_OPENGL=ON \
#   -DWITH_OPENCL=ON \
#   -DWITH_IPP=ON \
#   -DWITH_TBB=ON \
#   -DWITH_EIGEN=ON \
#   -DWITH_V4L=ON \
#   -DBUILD_TESTS=OFF \
#   -DBUILD_PERF_TESTS=OFF \
#   -DCMAKE_BUILD_TYPE=RELEASE \
#   -DCMAKE_INSTALL_PREFIX=$(python3.7 -c "import sys; print(sys.prefix)") \
#   -DPYTHON_EXECUTABLE=$(which python3.7) \
#   -DPYTHON_INCLUDE_DIR=$(python3.7 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") \
#   -DPYTHON_PACKAGES_PATH=$(python3.7 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") .. 

# RUN make install 
# RUN rm -r /opencv-${OPENCV_VERSION}
# RUN ln -s \
#   /usr/local/python/cv2/python-3.7/cv2.cpython-37m-x86_64-linux-gnu.so \
#   /usr/local/lib/python3.7/site-packages/cv2.so

# WORKDIR /
# RUN wget -O people-counting-opencv.zip http://t.dripemail2.com/c/eyJhY2NvdW50X2lkIjoiNDc2ODQyOSIsImRlbGl2ZXJ5X2lkIjoiNjg2MzY0MDM0OSIsInVybCI6Imh0dHA6Ly9weWltZy5jby96c2Y4Yj9fX3M9b2RmenRkdWttcWd1cHF6enFjdGIifQ
# RUN unzip people-counting-opencv.zip
# RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/4.0.0.zip
# RUN wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.0.0.zip
# RUN wget -O people-counting-opencv.zip http://t.dripemail2.com/c/eyJhY2NvdW50X2lkIjoiNDc2ODQyOSIsImRlbGl2ZXJ5X2lkIjoiNjg2MzY0MDM0OSIsInVybCI6Imh0dHA6Ly9weWltZy5jby96c2Y4Yj9fX3M9b2RmenRkdWttcWd1cHF6enFjdGIifQ
# RUN unzip opencv.zip
# RUN unzip opencv_contrib.zip
# RUN mv opencv-4.0.0 opencv
# RUN mv opencv_contrib-4.0.0 opencv_contrib
# RUN wget https://bootstrap.pypa.io/get-pip.py
# RUN python3 get-pip.py
# RUN pip install virtualenv virtualenvwrapper
# RUN rm -rf ~/get-pip.py ~/.cache/pip
# RUN dpkg-reconfigure dash
# RUN echo "\n# virtualenv and virtualenvwrapper" >> ~/.bashrc
# RUN echo "export WORKON_HOME=$HOME/.virtualenvs" >> ~/.bashrc
# RUN echo "export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3" >> ~/.bashrc
# RUN echo "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.bashrc
# SHELL ["/bin/bash", "-c"]
# RUN cat ~/.bashrc 
# RUN source ~/.bashrc

# SHELL ["/bin/bash", "-c"]
# RUN workon cv

# RUN pip install numpy
# RUN cd ~/opencv
# RUN mkdir build
# RUN cd build
# RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
#   -D CMAKE_INSTALL_PREFIX=/usr/local \
#   -D INSTALL_PYTHON_EXAMPLES=ON \
#   -D INSTALL_C_EXAMPLES=OFF \
#   -D OPENCV_ENABLE_NONFREE=ON \
#   -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
#   -D PYTHON_EXECUTABLE=~/.virtualenvs/cv/bin/python \
#   -D BUILD_EXAMPLES=ON ..
# RUN make -j4	
# RUN make install
# RUN ldconfig
# RUN workon cv
# RUN python --version

